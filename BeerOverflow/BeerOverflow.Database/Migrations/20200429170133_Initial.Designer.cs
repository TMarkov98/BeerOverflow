// <auto-generated />
using System;
using BeerOverflow.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BeerOverflow.Database.Migrations
{
    [DbContext(typeof(BeerOverflowContext))]
    [Migration("20200429170133_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BeerOverflow.Models.Beer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AlcoholByVolume")
                        .HasColumnType("float");

                    b.Property<int>("BreweryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BreweryId");

                    b.HasIndex("TypeId");

                    b.ToTable("Beers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlcoholByVolume = 5.0,
                            BreweryId = 1,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(2722),
                            IsDeleted = false,
                            Name = "Kaiser",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 2,
                            AlcoholByVolume = 6.4000000000000004,
                            BreweryId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(4620),
                            IsDeleted = false,
                            Name = "Ah! 7 - Mursalski Red Ale",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 3,
                            AlcoholByVolume = 5.0,
                            BreweryId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(4745),
                            IsDeleted = false,
                            Name = "Ah! 5 - Bad Baba",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            AlcoholByVolume = 5.2000000000000002,
                            BreweryId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(4828),
                            IsDeleted = false,
                            Name = "Ah! 3 - Bulgarian Pale Ale",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            AlcoholByVolume = 5.0,
                            BreweryId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(4907),
                            IsDeleted = false,
                            Name = "Ah! Sofia Streets",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            AlcoholByVolume = 7.0,
                            BreweryId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(4994),
                            IsDeleted = false,
                            Name = "Mr. Habi Benero",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 7,
                            AlcoholByVolume = 5.0,
                            BreweryId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5068),
                            IsDeleted = false,
                            Name = "Ah! 6 - Funky Janky",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 8,
                            AlcoholByVolume = 8.0,
                            BreweryId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5138),
                            IsDeleted = false,
                            Name = "Ah! 13 - Corruption Brown Ale",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 9,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5211),
                            IsDeleted = false,
                            Name = "Ah! 9 - Kiss My Kvass",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 10,
                            AlcoholByVolume = 6.4000000000000004,
                            BreweryId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5287),
                            IsDeleted = false,
                            Name = "Ah! 23 - French Apple Cider",
                            TypeId = 14
                        },
                        new
                        {
                            Id = 11,
                            AlcoholByVolume = 4.9000000000000004,
                            BreweryId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5355),
                            IsDeleted = false,
                            Name = "Ah! 9 - Indian Pale Ale",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 12,
                            AlcoholByVolume = 6.0,
                            BreweryId = 3,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5425),
                            IsDeleted = false,
                            Name = "Ailyak Cryo Mosaic IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 13,
                            AlcoholByVolume = 6.0,
                            BreweryId = 3,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5503),
                            IsDeleted = false,
                            Name = "Ailyak Cryo DDH NEIPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 14,
                            AlcoholByVolume = 6.0,
                            BreweryId = 3,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5572),
                            IsDeleted = false,
                            Name = "Ailyak ProViotic",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 15,
                            AlcoholByVolume = 6.5999999999999996,
                            BreweryId = 3,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5642),
                            IsDeleted = false,
                            Name = "Ailyak Birthday IPA",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 16,
                            AlcoholByVolume = 4.5,
                            BreweryId = 4,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5716),
                            IsDeleted = false,
                            Name = "Astika Fine Quality Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 17,
                            AlcoholByVolume = 4.9000000000000004,
                            BreweryId = 4,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5803),
                            IsDeleted = false,
                            Name = "Astika Lux Premium",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 18,
                            AlcoholByVolume = 4.4000000000000004,
                            BreweryId = 4,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5880),
                            IsDeleted = false,
                            Name = "Burgasko Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 19,
                            AlcoholByVolume = 5.0,
                            BreweryId = 4,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(5953),
                            IsDeleted = false,
                            Name = "Astika Special",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 20,
                            AlcoholByVolume = 5.0,
                            BreweryId = 4,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6026),
                            IsDeleted = false,
                            Name = "Haskovo Beck's",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 21,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6094),
                            IsDeleted = false,
                            Name = "Beer Bastards Basi Kefa",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 22,
                            AlcoholByVolume = 5.2000000000000002,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6163),
                            IsDeleted = false,
                            Name = "Beer Bastards Po-Poleka",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 23,
                            AlcoholByVolume = 5.7999999999999998,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6235),
                            IsDeleted = false,
                            Name = "Beer Bastards Faster Bastard",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 24,
                            AlcoholByVolume = 4.7000000000000002,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6302),
                            IsDeleted = false,
                            Name = "Beer Bastards Freigeist Dirty Flamingo",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 25,
                            AlcoholByVolume = 6.5999999999999996,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6374),
                            IsDeleted = false,
                            Name = "Beer Bastards Opasen Char",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 26,
                            AlcoholByVolume = 4.5999999999999996,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6478),
                            IsDeleted = false,
                            Name = "Beer Bastards Bash Maistora",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 27,
                            AlcoholByVolume = 4.4000000000000004,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6544),
                            IsDeleted = false,
                            Name = "Beer Bastards Edno Vreme",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 28,
                            AlcoholByVolume = 9.0,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6639),
                            IsDeleted = false,
                            Name = "Beer Bastards Solo New Garash Cake",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 29,
                            AlcoholByVolume = 7.0,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6705),
                            IsDeleted = false,
                            Name = "Beer Bastards Bone Chance",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 30,
                            AlcoholByVolume = 4.4000000000000004,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6771),
                            IsDeleted = false,
                            Name = "Beer Bastards Gusto Maina",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 31,
                            AlcoholByVolume = 9.6999999999999993,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6837),
                            IsDeleted = false,
                            Name = "Beer Bastards Tok i Zhica",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 32,
                            AlcoholByVolume = 8.0,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6903),
                            IsDeleted = false,
                            Name = "Beer Bastards Dami Kanyat",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 33,
                            AlcoholByVolume = 5.5,
                            BreweryId = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(6968),
                            IsDeleted = false,
                            Name = "Beer Bastards Toplo Takova",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 34,
                            AlcoholByVolume = 5.5999999999999996,
                            BreweryId = 4,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7041),
                            IsDeleted = false,
                            Name = "Astika Tumno",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 35,
                            AlcoholByVolume = 4.4000000000000004,
                            BreweryId = 4,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7116),
                            IsDeleted = false,
                            Name = "Astika Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 36,
                            AlcoholByVolume = 4.0,
                            BreweryId = 6,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7184),
                            IsDeleted = false,
                            Name = "Beerbox Galleon Weiss",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 37,
                            AlcoholByVolume = 5.0,
                            BreweryId = 6,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7252),
                            IsDeleted = false,
                            Name = "Beerbox Galleon Premium Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 38,
                            AlcoholByVolume = 5.5999999999999996,
                            BreweryId = 8,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7319),
                            IsDeleted = false,
                            Name = "HBH Tumna Jiva Bira",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 39,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 7,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7387),
                            IsDeleted = false,
                            Name = "Beershop-BG Gaida",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 40,
                            AlcoholByVolume = 5.2999999999999998,
                            BreweryId = 8,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7455),
                            IsDeleted = false,
                            Name = "HBH Svetla Jiva Bira",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 41,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7522),
                            IsDeleted = false,
                            Name = "Blek Pine Stout",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 42,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7587),
                            IsDeleted = false,
                            Name = "Blek Pine Rauchbier with Cocoa and Blek Pepper",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 43,
                            AlcoholByVolume = 7.7000000000000002,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7655),
                            IsDeleted = false,
                            Name = "Blek Pine Kokonut Porter",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 44,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7722),
                            IsDeleted = false,
                            Name = "Blek Pine Summer Is Coming",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 45,
                            AlcoholByVolume = 7.2999999999999998,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7786),
                            IsDeleted = false,
                            Name = "Blek Pine Pumpking Ale",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 46,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7849),
                            IsDeleted = false,
                            Name = "Blek Pine IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 47,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7914),
                            IsDeleted = false,
                            Name = "Blek Pine WCOS IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 48,
                            AlcoholByVolume = 7.0,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(7980),
                            IsDeleted = false,
                            Name = "Blek Pine New England",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 49,
                            AlcoholByVolume = 4.2999999999999998,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8121),
                            IsDeleted = false,
                            Name = "Blek Pine Sour Session",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 50,
                            AlcoholByVolume = 6.5999999999999996,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8184),
                            IsDeleted = false,
                            Name = "Blek Pine Blek & Red",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 51,
                            AlcoholByVolume = 9.0999999999999996,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8224),
                            IsDeleted = false,
                            Name = "Blek Pine Rum Pum Pum",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 52,
                            AlcoholByVolume = 6.5999999999999996,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8264),
                            IsDeleted = false,
                            Name = "Blek Pine Chilli in the Hills Chipotle Hoppy Stout",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 53,
                            AlcoholByVolume = 5.4000000000000004,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8303),
                            IsDeleted = false,
                            Name = "Blek Pine Blanche De Citron",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 54,
                            AlcoholByVolume = 5.7000000000000002,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8354),
                            IsDeleted = false,
                            Name = "Blek Pine Summer Is Coming - Episode 2",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 55,
                            AlcoholByVolume = 7.5999999999999996,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8395),
                            IsDeleted = false,
                            Name = "Blek Pine Divo Divo",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 56,
                            AlcoholByVolume = 6.4000000000000004,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8434),
                            IsDeleted = false,
                            Name = "Blek Pine Seriez Peach",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 57,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8474),
                            IsDeleted = false,
                            Name = "Blek Pine Session",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 58,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8513),
                            IsDeleted = false,
                            Name = "Blek Pine Sofia Metal Fest IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 59,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8552),
                            IsDeleted = false,
                            Name = "Blek Pine Rye IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 60,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8592),
                            IsDeleted = false,
                            Name = "Blek Pine IPA Limited Edition",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 61,
                            AlcoholByVolume = 5.0,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8631),
                            IsDeleted = false,
                            Name = "Boliarka Tumno",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 62,
                            AlcoholByVolume = 4.5999999999999996,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8670),
                            IsDeleted = false,
                            Name = "Schweik Cheshko Pivo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 63,
                            AlcoholByVolume = 4.0999999999999996,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8709),
                            IsDeleted = false,
                            Name = "Balkansko Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 64,
                            AlcoholByVolume = 4.2999999999999998,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8748),
                            IsDeleted = false,
                            Name = "Boliarka Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 65,
                            AlcoholByVolume = 5.0,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8788),
                            IsDeleted = false,
                            Name = "Diana Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 66,
                            AlcoholByVolume = 5.0,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8835),
                            IsDeleted = false,
                            Name = "Kings Premium",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 67,
                            AlcoholByVolume = 4.0999999999999996,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8875),
                            IsDeleted = false,
                            Name = "Boliarka Elba Svetlo Pivo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 68,
                            AlcoholByVolume = 5.0,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8914),
                            IsDeleted = false,
                            Name = "Boliarka Fort Premium Lager 100% Malt",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 69,
                            AlcoholByVolume = 3.0,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8954),
                            IsDeleted = false,
                            Name = "Tsarsko Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 70,
                            AlcoholByVolume = 4.2999999999999998,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(8993),
                            IsDeleted = false,
                            Name = "Boliarka Unpasteurised",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 71,
                            AlcoholByVolume = 4.0999999999999996,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9222),
                            IsDeleted = false,
                            Name = "Diana Premium Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 72,
                            AlcoholByVolume = 4.5999999999999996,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9273),
                            IsDeleted = false,
                            Name = "Peti Okean Jiva Bira",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 73,
                            AlcoholByVolume = 4.0999999999999996,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9313),
                            IsDeleted = false,
                            Name = "Kehlstein Premium Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 74,
                            AlcoholByVolume = 5.0,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9354),
                            IsDeleted = false,
                            Name = "Boliarka Special",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 75,
                            AlcoholByVolume = 4.0999999999999996,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9394),
                            IsDeleted = false,
                            Name = "Stara Stolitsa Svetlo Pivo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 76,
                            AlcoholByVolume = 5.4000000000000004,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9434),
                            IsDeleted = false,
                            Name = "Boliarka Weiss",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 77,
                            AlcoholByVolume = 4.0999999999999996,
                            BreweryId = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9474),
                            IsDeleted = false,
                            Name = "Nashensko Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 78,
                            AlcoholByVolume = 3.7999999999999998,
                            BreweryId = 11,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9513),
                            IsDeleted = false,
                            Name = "Bro Beer Fat Free Pig",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 79,
                            AlcoholByVolume = 5.0,
                            BreweryId = 11,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9554),
                            IsDeleted = false,
                            Name = "Bro Beer Importered Pig",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 80,
                            AlcoholByVolume = 5.5999999999999996,
                            BreweryId = 12,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9593),
                            IsDeleted = false,
                            Name = "Brothers Brew Team Make Coffee Great Again",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 81,
                            AlcoholByVolume = 5.5,
                            BreweryId = 12,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9632),
                            IsDeleted = false,
                            Name = "Brothers Brew Team Right As Rain",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 82,
                            AlcoholByVolume = 4.0,
                            BreweryId = 12,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9671),
                            IsDeleted = false,
                            Name = "Brothers Brew Team Mosaic",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 83,
                            AlcoholByVolume = 5.9000000000000004,
                            BreweryId = 12,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9710),
                            IsDeleted = false,
                            Name = "Brothers Deutschamerikaner",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 84,
                            AlcoholByVolume = 4.7000000000000002,
                            BreweryId = 12,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9749),
                            IsDeleted = false,
                            Name = "Brothers Brew Team Hello, World!",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 85,
                            AlcoholByVolume = 8.1999999999999993,
                            BreweryId = 12,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9788),
                            IsDeleted = false,
                            Name = "Brothers Brew Team Little Princess",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 86,
                            AlcoholByVolume = 7.2000000000000002,
                            BreweryId = 12,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9826),
                            IsDeleted = false,
                            Name = "Brothers Brew Team Liberation",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 87,
                            AlcoholByVolume = 5.4000000000000004,
                            BreweryId = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9866),
                            IsDeleted = false,
                            Name = "Veritas Spetsialen Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 88,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9905),
                            IsDeleted = false,
                            Name = "Veritas Single & Single",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 89,
                            AlcoholByVolume = 4.9000000000000004,
                            BreweryId = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9944),
                            IsDeleted = false,
                            Name = "Burgaska - Pivovarnata Summer Ale",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 90,
                            AlcoholByVolume = 5.5,
                            BreweryId = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 918, DateTimeKind.Local).AddTicks(9994),
                            IsDeleted = false,
                            Name = "Veritas Schwarz",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 91,
                            AlcoholByVolume = 5.2000000000000002,
                            BreweryId = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(36),
                            IsDeleted = false,
                            Name = "Veritas IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 92,
                            AlcoholByVolume = 5.4000000000000004,
                            BreweryId = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(75),
                            IsDeleted = false,
                            Name = "Veritas Green Lager",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 93,
                            AlcoholByVolume = 5.5,
                            BreweryId = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(114),
                            IsDeleted = false,
                            Name = "Veritas Tumna",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 94,
                            AlcoholByVolume = 5.5,
                            BreweryId = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(153),
                            IsDeleted = false,
                            Name = "Veritas Chervena",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 95,
                            AlcoholByVolume = 5.2999999999999998,
                            BreweryId = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(192),
                            IsDeleted = false,
                            Name = "Veritas Weizen",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 96,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(232),
                            IsDeleted = false,
                            Name = "Veritas Amber",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 97,
                            AlcoholByVolume = 4.0,
                            BreweryId = 14,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(271),
                            IsDeleted = false,
                            Name = "Can Supply Stobsko Pivo",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 98,
                            AlcoholByVolume = 4.7000000000000002,
                            BreweryId = 14,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(311),
                            IsDeleted = false,
                            Name = "Can Supply Brexit Craft Beer",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 99,
                            AlcoholByVolume = 4.2999999999999998,
                            BreweryId = 14,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(350),
                            IsDeleted = false,
                            Name = "Can Supply Odesos Markovo Pivo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 100,
                            AlcoholByVolume = 4.2999999999999998,
                            BreweryId = 14,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(390),
                            IsDeleted = false,
                            Name = "Can Supply Odesos Svetlo Pivo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 101,
                            AlcoholByVolume = 4.2999999999999998,
                            BreweryId = 14,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(429),
                            IsDeleted = false,
                            Name = "Can Supply Grussberg Pilsner",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 102,
                            AlcoholByVolume = 7.5,
                            BreweryId = 15,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(469),
                            IsDeleted = false,
                            Name = "Cohones Holy St. Out",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 103,
                            AlcoholByVolume = 7.0,
                            BreweryId = 15,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(508),
                            IsDeleted = false,
                            Name = "Cohones St. Out",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 104,
                            AlcoholByVolume = 5.0,
                            BreweryId = 15,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(548),
                            IsDeleted = false,
                            Name = "Cohones Family Jewels",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 105,
                            AlcoholByVolume = 7.0,
                            BreweryId = 16,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(587),
                            IsDeleted = false,
                            Name = "Dorst Zimen Bok",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 106,
                            AlcoholByVolume = 6.5999999999999996,
                            BreweryId = 16,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(627),
                            IsDeleted = false,
                            Name = "Dorst Hippy Shake",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 107,
                            AlcoholByVolume = 6.0,
                            BreweryId = 16,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(667),
                            IsDeleted = false,
                            Name = "Dorst Pink Future Mosaic",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 108,
                            AlcoholByVolume = 5.7999999999999998,
                            BreweryId = 17,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(706),
                            IsDeleted = false,
                            Name = "Roustchouk Porter",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 109,
                            AlcoholByVolume = 5.7000000000000002,
                            BreweryId = 17,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(753),
                            IsDeleted = false,
                            Name = "Dunav Sans Changement",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 110,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 17,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(793),
                            IsDeleted = false,
                            Name = "Dunav Radetzky",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 111,
                            AlcoholByVolume = 5.0,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(833),
                            IsDeleted = false,
                            Name = "Glarus Porter",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 112,
                            AlcoholByVolume = 6.0,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(872),
                            IsDeleted = false,
                            Name = "Glarus Black Sea IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 113,
                            AlcoholByVolume = 4.5999999999999996,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(911),
                            IsDeleted = false,
                            Name = "Glarus Special English Ale",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 114,
                            AlcoholByVolume = 6.5,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(950),
                            IsDeleted = false,
                            Name = "Glarus Dubbel",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 115,
                            AlcoholByVolume = 5.0,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(989),
                            IsDeleted = false,
                            Name = "Glarus Saison",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 116,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1029),
                            IsDeleted = false,
                            Name = "Glarus Premium Ale",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 117,
                            AlcoholByVolume = 5.5,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1067),
                            IsDeleted = false,
                            Name = "Glarus Marzen",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 118,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1106),
                            IsDeleted = false,
                            Name = "Glarus Jester",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 119,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1145),
                            IsDeleted = false,
                            Name = "Glarus Halo",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 120,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1184),
                            IsDeleted = false,
                            Name = "Glarus Fruity & Hazy",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 121,
                            AlcoholByVolume = 5.0,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1223),
                            IsDeleted = false,
                            Name = "Glarus Rhodopi Dream",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 122,
                            AlcoholByVolume = 5.0,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1261),
                            IsDeleted = false,
                            Name = "Glarus Signature Session IPA Mandarina Bavaria",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 123,
                            AlcoholByVolume = 5.0,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1300),
                            IsDeleted = false,
                            Name = "Glarus Holy Night",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 124,
                            AlcoholByVolume = 4.5999999999999996,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1339),
                            IsDeleted = false,
                            Name = "Glarus London Porter",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 125,
                            AlcoholByVolume = 5.0,
                            BreweryId = 19,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1379),
                            IsDeleted = false,
                            Name = "Halbite Nashto Pivo",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 126,
                            AlcoholByVolume = 5.0,
                            BreweryId = 20,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1418),
                            IsDeleted = false,
                            Name = "Hills Helles Rauch",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 127,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 20,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1457),
                            IsDeleted = false,
                            Name = "Hills Pils",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 128,
                            AlcoholByVolume = 3.7999999999999998,
                            BreweryId = 20,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1495),
                            IsDeleted = false,
                            Name = "Hills Summer Blanche - Session Ale",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 129,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 20,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1542),
                            IsDeleted = false,
                            Name = "Hills Smooth Bock",
                            TypeId = 13
                        },
                        new
                        {
                            Id = 130,
                            AlcoholByVolume = 5.2000000000000002,
                            BreweryId = 20,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1587),
                            IsDeleted = false,
                            Name = "Hills Single Stout",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 131,
                            AlcoholByVolume = 4.9000000000000004,
                            BreweryId = 20,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1630),
                            IsDeleted = false,
                            Name = "Hills Weizen",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 132,
                            AlcoholByVolume = 5.0,
                            BreweryId = 21,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1670),
                            IsDeleted = false,
                            Name = "Jägerhof Weiss",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 133,
                            AlcoholByVolume = 5.0,
                            BreweryId = 21,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1709),
                            IsDeleted = false,
                            Name = "Jägerhof Dunkel",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 134,
                            AlcoholByVolume = 5.2999999999999998,
                            BreweryId = 21,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1747),
                            IsDeleted = false,
                            Name = "Jägerhof Ale",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 135,
                            AlcoholByVolume = 7.0,
                            BreweryId = 21,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1787),
                            IsDeleted = false,
                            Name = "Jägerhof Bock",
                            TypeId = 13
                        },
                        new
                        {
                            Id = 136,
                            AlcoholByVolume = 5.5,
                            BreweryId = 21,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1827),
                            IsDeleted = false,
                            Name = "Jägerhof Dunkel Weisse",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 137,
                            AlcoholByVolume = 6.5,
                            BreweryId = 22,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1866),
                            IsDeleted = false,
                            Name = "Kazan Artizan Stout",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 138,
                            AlcoholByVolume = 5.7000000000000002,
                            BreweryId = 22,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1905),
                            IsDeleted = false,
                            Name = "Kazan Artizan Ad Hoc IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 139,
                            AlcoholByVolume = 5.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1945),
                            IsDeleted = false,
                            Name = "Almus Tumno",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 140,
                            AlcoholByVolume = 5.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(1984),
                            IsDeleted = false,
                            Name = "Almus Cherveno",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 141,
                            AlcoholByVolume = 5.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2023),
                            IsDeleted = false,
                            Name = "Vitoshko Lale",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 142,
                            AlcoholByVolume = 4.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2062),
                            IsDeleted = false,
                            Name = "Almus Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 143,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2108),
                            IsDeleted = false,
                            Name = "Almus Lux",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 144,
                            AlcoholByVolume = 5.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2150),
                            IsDeleted = false,
                            Name = "Vitoshko Lale Hoppy Weiss",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 145,
                            AlcoholByVolume = 5.0,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2188),
                            IsDeleted = false,
                            Name = "Lomsko Pivo Ubav Pustinyak",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 146,
                            AlcoholByVolume = 5.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2228),
                            IsDeleted = false,
                            Name = "Lomsko Amber Beer",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 147,
                            AlcoholByVolume = 4.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2295),
                            IsDeleted = false,
                            Name = "Hmelo Lale",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 148,
                            AlcoholByVolume = 5.0,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2391),
                            IsDeleted = false,
                            Name = "Lomsko Pivo Blag Pustinyak",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 149,
                            AlcoholByVolume = 5.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2510),
                            IsDeleted = false,
                            Name = "Lomsko Pivo Shopsko Pivo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 150,
                            AlcoholByVolume = 7.0,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2577),
                            IsDeleted = false,
                            Name = "Lomsko Pivo Bash Pustinyak",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 151,
                            AlcoholByVolume = 4.0,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(2908),
                            IsDeleted = false,
                            Name = "Lomsko Pivo Pustinyak",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 152,
                            AlcoholByVolume = 5.0,
                            BreweryId = 18,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(3266),
                            IsDeleted = false,
                            Name = "Lomsko Pivo Yak Pustinyak",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 153,
                            AlcoholByVolume = 6.0,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(3385),
                            IsDeleted = false,
                            Name = "Lomsko Porter",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 154,
                            AlcoholByVolume = 4.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(3463),
                            IsDeleted = false,
                            Name = "Vitoshko Lale Pale Ale",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 155,
                            AlcoholByVolume = 5.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(3536),
                            IsDeleted = false,
                            Name = "Vitoshko Lale Tumno Pivo",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 156,
                            AlcoholByVolume = 4.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(3607),
                            IsDeleted = false,
                            Name = "Lomsko Pivo Everyday Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 157,
                            AlcoholByVolume = 5.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(3676),
                            IsDeleted = false,
                            Name = "Lomsko Pivo Everyday Luxe",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 158,
                            AlcoholByVolume = 5.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(3747),
                            IsDeleted = false,
                            Name = "Shipka",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 159,
                            AlcoholByVolume = 5.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(3818),
                            IsDeleted = false,
                            Name = "Lomsko Lux",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 160,
                            AlcoholByVolume = 4.0,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(3887),
                            IsDeleted = false,
                            Name = "Gredberg",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 161,
                            AlcoholByVolume = 4.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(3958),
                            IsDeleted = false,
                            Name = "Shopsko Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 162,
                            AlcoholByVolume = 5.0,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4045),
                            IsDeleted = false,
                            Name = "Almus Special",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 163,
                            AlcoholByVolume = 3.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4118),
                            IsDeleted = false,
                            Name = "Tsarsko Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 164,
                            AlcoholByVolume = 4.0,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4188),
                            IsDeleted = false,
                            Name = "Miziya Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 165,
                            AlcoholByVolume = 3.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4260),
                            IsDeleted = false,
                            Name = "Dunavsko Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 166,
                            AlcoholByVolume = 3.5,
                            BreweryId = 23,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4330),
                            IsDeleted = false,
                            Name = "Optima Svetlo",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 167,
                            AlcoholByVolume = 5.0,
                            BreweryId = 24,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4402),
                            IsDeleted = false,
                            Name = "Lucs Plum",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 168,
                            AlcoholByVolume = 5.0,
                            BreweryId = 24,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4474),
                            IsDeleted = false,
                            Name = "Lucs Cherry",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 169,
                            AlcoholByVolume = 6.5,
                            BreweryId = 24,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4545),
                            IsDeleted = false,
                            Name = "Lucs Trevnensko",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 170,
                            AlcoholByVolume = 5.0,
                            BreweryId = 24,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4614),
                            IsDeleted = false,
                            Name = "Lucs Kehlibar",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 171,
                            AlcoholByVolume = 5.0,
                            BreweryId = 24,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4683),
                            IsDeleted = false,
                            Name = "Lucs Svetlo",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 172,
                            AlcoholByVolume = 5.2999999999999998,
                            BreweryId = 25,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4754),
                            IsDeleted = false,
                            Name = "Mad Panda Cryo Bandit",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 173,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 25,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4825),
                            IsDeleted = false,
                            Name = "Mad Panda God Gave the Hops",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 174,
                            AlcoholByVolume = 6.5999999999999996,
                            BreweryId = 25,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4896),
                            IsDeleted = false,
                            Name = "Mad Panda Powder Mafia",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 175,
                            AlcoholByVolume = 5.5,
                            BreweryId = 25,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(4969),
                            IsDeleted = false,
                            Name = "Mad Panda PsycHOP Therapy",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 176,
                            AlcoholByVolume = 11.0,
                            BreweryId = 26,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5041),
                            IsDeleted = false,
                            Name = "Meadly Sweet Mead",
                            TypeId = 12
                        },
                        new
                        {
                            Id = 177,
                            AlcoholByVolume = 13.0,
                            BreweryId = 26,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5121),
                            IsDeleted = false,
                            Name = "Meadly Traditional Mead",
                            TypeId = 12
                        },
                        new
                        {
                            Id = 178,
                            AlcoholByVolume = 12.0,
                            BreweryId = 26,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5199),
                            IsDeleted = false,
                            Name = "Meadly Live Mead With Herbs",
                            TypeId = 12
                        },
                        new
                        {
                            Id = 179,
                            AlcoholByVolume = 10.0,
                            BreweryId = 26,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5271),
                            IsDeleted = false,
                            Name = "Meadly Zhiva Medovina",
                            TypeId = 12
                        },
                        new
                        {
                            Id = 180,
                            AlcoholByVolume = 5.5,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5344),
                            IsDeleted = false,
                            Name = "Metalhead Space Lord",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 181,
                            AlcoholByVolume = 10.5,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5416),
                            IsDeleted = false,
                            Name = "Metalhead Sweet Stout of Mine",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 182,
                            AlcoholByVolume = 6.9000000000000004,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5501),
                            IsDeleted = false,
                            Name = "Metalhead Your Girlfriend's Girlfriend",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 183,
                            AlcoholByVolume = 5.4000000000000004,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5572),
                            IsDeleted = false,
                            Name = "Metalhead Lickitup",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 184,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5643),
                            IsDeleted = false,
                            Name = "Metalhead Headbangers Boil",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 185,
                            AlcoholByVolume = 4.5999999999999996,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5712),
                            IsDeleted = false,
                            Name = "Metalhead Cinn City",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 186,
                            AlcoholByVolume = 7.0,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5780),
                            IsDeleted = false,
                            Name = "Metalhead Supermassive Black IPA",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 187,
                            AlcoholByVolume = 7.0999999999999996,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5851),
                            IsDeleted = false,
                            Name = "Metalhead King Nothing",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 188,
                            AlcoholByVolume = 5.9000000000000004,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5920),
                            IsDeleted = false,
                            Name = "Metalhead Turbo Lover",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 189,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(5990),
                            IsDeleted = false,
                            Name = "Metalhead Pleasure and Pain",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 190,
                            AlcoholByVolume = 10.5,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6061),
                            IsDeleted = false,
                            Name = "Metalhead Sweet Stout of Mine Barrel Aged: Jack Daniel's",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 191,
                            AlcoholByVolume = 3.7999999999999998,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6130),
                            IsDeleted = false,
                            Name = "Metalhead Running Mild",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 192,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6200),
                            IsDeleted = false,
                            Name = "Metalhead Metalingus",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 193,
                            AlcoholByVolume = 6.5,
                            BreweryId = 27,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6270),
                            IsDeleted = false,
                            Name = "Metalhead Hop Suey",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 194,
                            AlcoholByVolume = 4.4000000000000004,
                            BreweryId = 28,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6340),
                            IsDeleted = false,
                            Name = "Pirinsko Svetlo Pivo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 195,
                            AlcoholByVolume = 4.4000000000000004,
                            BreweryId = 28,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6411),
                            IsDeleted = false,
                            Name = "Pirinsko Mlado Pivo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 196,
                            AlcoholByVolume = 4.4000000000000004,
                            BreweryId = 28,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6482),
                            IsDeleted = false,
                            Name = "Pirinsko Ledeno",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 197,
                            AlcoholByVolume = 4.7000000000000002,
                            BreweryId = 28,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6552),
                            IsDeleted = false,
                            Name = "Pirinsko Tumno Pivo",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 198,
                            AlcoholByVolume = 4.0,
                            BreweryId = 29,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6620),
                            IsDeleted = false,
                            Name = "Pivoteka Hala",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 199,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6689),
                            IsDeleted = false,
                            Name = "Kamenitza Staro Pivo",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 200,
                            AlcoholByVolume = 5.0,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6757),
                            IsDeleted = false,
                            Name = "Kamenitza Tamno",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 201,
                            AlcoholByVolume = 5.0,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6832),
                            IsDeleted = false,
                            Name = "Kamenitza Lev",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 202,
                            AlcoholByVolume = 5.0,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6902),
                            IsDeleted = false,
                            Name = "Kamenitza Extra",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 203,
                            AlcoholByVolume = 4.4000000000000004,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(6970),
                            IsDeleted = false,
                            Name = "Kamenitza 1881",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 204,
                            AlcoholByVolume = 4.0999999999999996,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7041),
                            IsDeleted = false,
                            Name = "Slavena Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 205,
                            AlcoholByVolume = 4.4000000000000004,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7111),
                            IsDeleted = false,
                            Name = "Kamenitza Cherveno",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 206,
                            AlcoholByVolume = 5.0,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7184),
                            IsDeleted = false,
                            Name = "Kamenitza Bialo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 207,
                            AlcoholByVolume = 4.0999999999999996,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7255),
                            IsDeleted = false,
                            Name = "Pleven Svetlo Pivo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 208,
                            AlcoholByVolume = 4.9000000000000004,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7327),
                            IsDeleted = false,
                            Name = "Kamenitza Nefiltrirano",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 209,
                            AlcoholByVolume = 6.0,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7400),
                            IsDeleted = false,
                            Name = "Kamenitza Tumno",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 210,
                            AlcoholByVolume = 5.0,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7471),
                            IsDeleted = false,
                            Name = "Kamenitza Pshenichno",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 211,
                            AlcoholByVolume = 5.0999999999999996,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7546),
                            IsDeleted = false,
                            Name = "Kamenitza Live",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 212,
                            AlcoholByVolume = 9.0,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7618),
                            IsDeleted = false,
                            Name = "Kamenitza Tvurdo",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 213,
                            AlcoholByVolume = 4.4000000000000004,
                            BreweryId = 30,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7689),
                            IsDeleted = false,
                            Name = "Pleven Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 214,
                            AlcoholByVolume = 4.5,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(7938),
                            IsDeleted = false,
                            Name = "Divo Pivo",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 215,
                            AlcoholByVolume = 4.5,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8012),
                            IsDeleted = false,
                            Name = "Divo Pivo HD Limited",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 216,
                            AlcoholByVolume = 5.5999999999999996,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8083),
                            IsDeleted = false,
                            Name = "Divo Pivo Red Ale",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 218,
                            AlcoholByVolume = 4.5,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8152),
                            IsDeleted = false,
                            Name = "Divo Pivo Session IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 219,
                            AlcoholByVolume = 4.5,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8223),
                            IsDeleted = false,
                            Name = "Divo Pivo DDH DDH",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 220,
                            AlcoholByVolume = 4.5,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8291),
                            IsDeleted = false,
                            Name = "Kotka & Mishka Session IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 221,
                            AlcoholByVolume = 4.7000000000000002,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8377),
                            IsDeleted = false,
                            Name = "Samets",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 222,
                            AlcoholByVolume = 4.5,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8445),
                            IsDeleted = false,
                            Name = "Na Specialnata Peika",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 223,
                            AlcoholByVolume = 4.5,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8508),
                            IsDeleted = false,
                            Name = "Na Peikata",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 224,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8574),
                            IsDeleted = false,
                            Name = "Divo Pivo Gaillot",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 225,
                            AlcoholByVolume = 4.5999999999999996,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8667),
                            IsDeleted = false,
                            Name = "Divo Pivo Kapana Ale",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 226,
                            AlcoholByVolume = 4.5,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8751),
                            IsDeleted = false,
                            Name = "Divo Pivo Weiss",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 227,
                            AlcoholByVolume = 4.5,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8820),
                            IsDeleted = false,
                            Name = "Divo Pivo 3rd of March",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 228,
                            AlcoholByVolume = 4.5,
                            BreweryId = 31,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8905),
                            IsDeleted = false,
                            Name = "Divo Pivo First Birthday Edition",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 229,
                            AlcoholByVolume = 4.5,
                            BreweryId = 32,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(8972),
                            IsDeleted = false,
                            Name = "Britos",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 230,
                            AlcoholByVolume = 4.5,
                            BreweryId = 32,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9040),
                            IsDeleted = false,
                            Name = "Britos Contintental Lager",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 231,
                            AlcoholByVolume = 5.0,
                            BreweryId = 32,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9109),
                            IsDeleted = false,
                            Name = "Britos Hoppy Blond",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 232,
                            AlcoholByVolume = 5.5,
                            BreweryId = 32,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9174),
                            IsDeleted = false,
                            Name = "Britos Opusheno",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 233,
                            AlcoholByVolume = 4.0,
                            BreweryId = 32,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9242),
                            IsDeleted = false,
                            Name = "Nazdrave Svetlo",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 234,
                            AlcoholByVolume = 4.0,
                            BreweryId = 32,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9311),
                            IsDeleted = false,
                            Name = "Kronberg",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 235,
                            AlcoholByVolume = 6.5,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9379),
                            IsDeleted = false,
                            Name = "Stolichno Bock",
                            TypeId = 13
                        },
                        new
                        {
                            Id = 236,
                            AlcoholByVolume = 6.5,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9445),
                            IsDeleted = false,
                            Name = "Stolichno Weiss",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 237,
                            AlcoholByVolume = 7.0999999999999996,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9513),
                            IsDeleted = false,
                            Name = "Stolichno Pale Bock",
                            TypeId = 13
                        },
                        new
                        {
                            Id = 238,
                            AlcoholByVolume = 6.0,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9581),
                            IsDeleted = false,
                            Name = "Stolichno Amber Pils",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 239,
                            AlcoholByVolume = 5.5,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9647),
                            IsDeleted = false,
                            Name = "Stolichno Pale Ale",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 240,
                            AlcoholByVolume = 4.5,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9723),
                            IsDeleted = false,
                            Name = "Kradetsut na Yabulki Sochna Yabulka",
                            TypeId = 14
                        },
                        new
                        {
                            Id = 241,
                            AlcoholByVolume = 5.5,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9789),
                            IsDeleted = false,
                            Name = "Ariana Tumno",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 242,
                            AlcoholByVolume = 6.0,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9857),
                            IsDeleted = false,
                            Name = "Zagorka Rezerva",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 243,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9922),
                            IsDeleted = false,
                            Name = "Zagorka IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 244,
                            AlcoholByVolume = 4.5,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 919, DateTimeKind.Local).AddTicks(9985),
                            IsDeleted = false,
                            Name = "Zagorka Retro",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 245,
                            AlcoholByVolume = 5.0,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(54),
                            IsDeleted = false,
                            Name = "Zagorka Spetsialno",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 246,
                            AlcoholByVolume = 4.5,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(120),
                            IsDeleted = false,
                            Name = "Ariana",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 247,
                            AlcoholByVolume = 5.0,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(185),
                            IsDeleted = false,
                            Name = "Zagorka Gold",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 248,
                            AlcoholByVolume = 4.5,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(251),
                            IsDeleted = false,
                            Name = "Kradetsut na Yabulki Krade I Slivi",
                            TypeId = 14
                        },
                        new
                        {
                            Id = 249,
                            AlcoholByVolume = 4.5,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(319),
                            IsDeleted = false,
                            Name = "Kradetsut na Yabulki Krade I Vishni",
                            TypeId = 14
                        },
                        new
                        {
                            Id = 250,
                            AlcoholByVolume = 5.0,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(384),
                            IsDeleted = false,
                            Name = "Amstel Dark",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 251,
                            AlcoholByVolume = 4.9000000000000004,
                            BreweryId = 33,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(452),
                            IsDeleted = false,
                            Name = "Ariana Varka7",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 252,
                            AlcoholByVolume = 9.3000000000000007,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(517),
                            IsDeleted = false,
                            Name = "Rhombus Impreial Porter (Barrel Aged)",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 253,
                            AlcoholByVolume = 7.2000000000000002,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(585),
                            IsDeleted = false,
                            Name = "Rhombus Dirty",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 254,
                            AlcoholByVolume = 7.2000000000000002,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(655),
                            IsDeleted = false,
                            Name = "Rhombus Imperial Porter",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 255,
                            AlcoholByVolume = 6.0,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(722),
                            IsDeleted = false,
                            Name = "Rhombus Aloha IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 256,
                            AlcoholByVolume = 5.7999999999999998,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(785),
                            IsDeleted = false,
                            Name = "Rhombus Weizen IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 257,
                            AlcoholByVolume = 5.0,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(855),
                            IsDeleted = false,
                            Name = "Rhombus English Porter",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 258,
                            AlcoholByVolume = 6.2999999999999998,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(925),
                            IsDeleted = false,
                            Name = "Rhombus Dr. Brettish",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 259,
                            AlcoholByVolume = 6.0,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1030),
                            IsDeleted = false,
                            Name = "Rhombus Dr. Cherry Kriek",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 260,
                            AlcoholByVolume = 6.0,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1099),
                            IsDeleted = false,
                            Name = "Rhombus Alba - White IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 261,
                            AlcoholByVolume = 6.0,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1165),
                            IsDeleted = false,
                            Name = "Rhombus Apfel Strudel",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 262,
                            AlcoholByVolume = 7.5999999999999996,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1236),
                            IsDeleted = false,
                            Name = "Rhombus Pearl",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 263,
                            AlcoholByVolume = 6.2999999999999998,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1305),
                            IsDeleted = false,
                            Name = "Rhombus In the Blooming Rye",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 264,
                            AlcoholByVolume = 3.8999999999999999,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1373),
                            IsDeleted = false,
                            Name = "Rhombus Violet",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 265,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1441),
                            IsDeleted = false,
                            Name = "Rhombus Lavender Nights",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 266,
                            AlcoholByVolume = 6.4000000000000004,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1511),
                            IsDeleted = false,
                            Name = "Rhombus Mint Nights",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 267,
                            AlcoholByVolume = 3.0,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1581),
                            IsDeleted = false,
                            Name = "Rhombus Hakuna Matata",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 268,
                            AlcoholByVolume = 9.1999999999999993,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1649),
                            IsDeleted = false,
                            Name = "Rhombus Tok i Zhica",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 269,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1728),
                            IsDeleted = false,
                            Name = "Rhombus Orpheus Gruit",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 270,
                            AlcoholByVolume = 8.0,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1800),
                            IsDeleted = false,
                            Name = "Rhombus The Crow",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 271,
                            AlcoholByVolume = 5.0999999999999996,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1868),
                            IsDeleted = false,
                            Name = "Rhombus Christmas Fever",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 272,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(1983),
                            IsDeleted = false,
                            Name = "Rhombus AnimAle",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 273,
                            AlcoholByVolume = 7.2000000000000002,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(2050),
                            IsDeleted = false,
                            Name = "Rhombus Pardon I'm Brut",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 274,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(2116),
                            IsDeleted = false,
                            Name = "Rhombus Irish Red",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 275,
                            AlcoholByVolume = 5.0,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(2557),
                            IsDeleted = false,
                            Name = "Rhombus Weiss",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 276,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(2676),
                            IsDeleted = false,
                            Name = "Rhombus Pale Ale",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 277,
                            AlcoholByVolume = 5.5,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(2745),
                            IsDeleted = false,
                            Name = "Rhombus Dark Steel",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 278,
                            AlcoholByVolume = 4.5,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(2817),
                            IsDeleted = false,
                            Name = "Rhombus St. Patrick's Beer",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 279,
                            AlcoholByVolume = 3.5,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(2887),
                            IsDeleted = false,
                            Name = "Rhombus Catch the Wave",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 333,
                            AlcoholByVolume = 4.5,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(2955),
                            IsDeleted = false,
                            Name = "Rhombus Pilsner",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 334,
                            AlcoholByVolume = 7.0999999999999996,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3024),
                            IsDeleted = false,
                            Name = "Rhombus Easter",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 335,
                            AlcoholByVolume = 5.4000000000000004,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3092),
                            IsDeleted = false,
                            Name = "Rhombus Belona",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 336,
                            AlcoholByVolume = 5.9000000000000004,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3158),
                            IsDeleted = false,
                            Name = "Rhombus Mart",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 337,
                            AlcoholByVolume = 5.7999999999999998,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3224),
                            IsDeleted = false,
                            Name = "Rhombus Black Widow",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 338,
                            AlcoholByVolume = 6.0,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3291),
                            IsDeleted = false,
                            Name = "Rhombus Arriba Arriba",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 339,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3358),
                            IsDeleted = false,
                            Name = "Rhombus Boston Tea Party",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 340,
                            AlcoholByVolume = 4.5,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3427),
                            IsDeleted = false,
                            Name = "Rhombus Kirschtorte",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 341,
                            AlcoholByVolume = 5.5,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3511),
                            IsDeleted = false,
                            Name = "Rhombus Breakfast Oatmeal Stout",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 342,
                            AlcoholByVolume = 5.7999999999999998,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3585),
                            IsDeleted = false,
                            Name = "Rhombus Star Anise Stout",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 280,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3657),
                            IsDeleted = false,
                            Name = "Rhombus Brown Ale",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 281,
                            AlcoholByVolume = 5.7000000000000002,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3729),
                            IsDeleted = false,
                            Name = "Rhombus Flanders Brown Ale Special Selection",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 282,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3796),
                            IsDeleted = false,
                            Name = "Rhombus Belgian Blond",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 283,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3870),
                            IsDeleted = false,
                            Name = "Rhombus Spetsialno",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 284,
                            AlcoholByVolume = 6.5999999999999996,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(3945),
                            IsDeleted = false,
                            Name = "Rhombus Imperial Ale",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 285,
                            AlcoholByVolume = 4.7999999999999998,
                            BreweryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4017),
                            IsDeleted = false,
                            Name = "Rhombus Svetlo",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 286,
                            AlcoholByVolume = 6.2000000000000002,
                            BreweryId = 35,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4088),
                            IsDeleted = false,
                            Name = "Royal Cat",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 287,
                            AlcoholByVolume = 5.5999999999999996,
                            BreweryId = 36,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4157),
                            IsDeleted = false,
                            Name = "Shumensko Kolektsiya Na Pivovarite Belgiyski Stil",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 288,
                            AlcoholByVolume = 5.5,
                            BreweryId = 36,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4228),
                            IsDeleted = false,
                            Name = "Shumensko Tumno",
                            TypeId = 8
                        },
                        new
                        {
                            Id = 289,
                            AlcoholByVolume = 5.0999999999999996,
                            BreweryId = 36,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4297),
                            IsDeleted = false,
                            Name = "Shumensko Cherveno",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 290,
                            AlcoholByVolume = 5.4000000000000004,
                            BreweryId = 36,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4363),
                            IsDeleted = false,
                            Name = "Shumnesko Kolektsiya na Pivovarite Cheshki Stil",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 291,
                            AlcoholByVolume = 5.2000000000000002,
                            BreweryId = 36,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4432),
                            IsDeleted = false,
                            Name = "Shumensko",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 292,
                            AlcoholByVolume = 4.5999999999999996,
                            BreweryId = 36,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4504),
                            IsDeleted = false,
                            Name = "Shumensko Premium",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 293,
                            AlcoholByVolume = 4.2999999999999998,
                            BreweryId = 36,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4581),
                            IsDeleted = false,
                            Name = "Shumensko Svetlo Pivo",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 294,
                            AlcoholByVolume = 7.0,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4652),
                            IsDeleted = false,
                            Name = "Trima I Dvama CHIPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 295,
                            AlcoholByVolume = 5.5,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4721),
                            IsDeleted = false,
                            Name = "Trima I Dvama Mashin' Pumpkins",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 296,
                            AlcoholByVolume = 5.0,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(4933),
                            IsDeleted = false,
                            Name = "Trima I Dvama Bloody Muddy",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 297,
                            AlcoholByVolume = 7.0,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5005),
                            IsDeleted = false,
                            Name = "Trima I Dvama Ginger Sucker Happy Ginger Ale",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 298,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5270),
                            IsDeleted = false,
                            Name = "Trima I Dvama Janka",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 299,
                            AlcoholByVolume = 5.5999999999999996,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5353),
                            IsDeleted = false,
                            Name = "Trima I Dvama Smoking Hot",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 300,
                            AlcoholByVolume = 5.0,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5429),
                            IsDeleted = false,
                            Name = "Trima I Dvama Ancient Meridian",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 301,
                            AlcoholByVolume = 5.0,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5498),
                            IsDeleted = false,
                            Name = "Trima I Dvama Unlackee",
                            TypeId = 7
                        },
                        new
                        {
                            Id = 302,
                            AlcoholByVolume = 5.0,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5567),
                            IsDeleted = false,
                            Name = "Trima I Dvama Chai Malko",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 303,
                            AlcoholByVolume = 5.0,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5639),
                            IsDeleted = false,
                            Name = "Trima I Dvama Chisto I Prosto",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 304,
                            AlcoholByVolume = 5.0,
                            BreweryId = 37,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5706),
                            IsDeleted = false,
                            Name = "Trima I Dvama Black Head Stout",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 305,
                            AlcoholByVolume = 7.0,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5774),
                            IsDeleted = false,
                            Name = "White Stork Tropikalia IPA",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 306,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5842),
                            IsDeleted = false,
                            Name = "White Stork 1908 Stout",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 307,
                            AlcoholByVolume = 9.0,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5913),
                            IsDeleted = false,
                            Name = "White Stork White Stout",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 308,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(5983),
                            IsDeleted = false,
                            Name = "White Stork Boys Don't Cry-o",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 309,
                            AlcoholByVolume = 7.0,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6056),
                            IsDeleted = false,
                            Name = "White Stork Cosmic Debris",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 310,
                            AlcoholByVolume = 5.5,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6127),
                            IsDeleted = false,
                            Name = "White Stork Pushing The Limets",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 311,
                            AlcoholByVolume = 3.5,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6195),
                            IsDeleted = false,
                            Name = "White Stork Rai",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 312,
                            AlcoholByVolume = 5.5,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6265),
                            IsDeleted = false,
                            Name = "White Stork Original",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 313,
                            AlcoholByVolume = 6.7000000000000002,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6337),
                            IsDeleted = false,
                            Name = "White Stork Dark Side",
                            TypeId = 10
                        },
                        new
                        {
                            Id = 314,
                            AlcoholByVolume = 3.6000000000000001,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6408),
                            IsDeleted = false,
                            Name = "White Stork Sofiiski Weisse",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 315,
                            AlcoholByVolume = 9.0999999999999996,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6481),
                            IsDeleted = false,
                            Name = "White Stork Mutants",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 316,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6552),
                            IsDeleted = false,
                            Name = "White Stork BOOGIEon by Ramsey Hercules",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 317,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6635),
                            IsDeleted = false,
                            Name = "White Stork Hop Along",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 318,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6704),
                            IsDeleted = false,
                            Name = "White Stork Into The Galaxy",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 319,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6771),
                            IsDeleted = false,
                            Name = "White Stork Just a Pilsner",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 320,
                            AlcoholByVolume = 7.0,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6841),
                            IsDeleted = false,
                            Name = "White Stork Tropikalia V2.0",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 321,
                            AlcoholByVolume = 7.0,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6909),
                            IsDeleted = false,
                            Name = "White Stork Take Me Somewhere Nice",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 322,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(6977),
                            IsDeleted = false,
                            Name = "White Stork Dry Hopped House Pilsner",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 323,
                            AlcoholByVolume = 4.2000000000000002,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(7046),
                            IsDeleted = false,
                            Name = "White Stork Kinky Afro",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 324,
                            AlcoholByVolume = 5.7000000000000002,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(7113),
                            IsDeleted = false,
                            Name = "White Stork Borderless",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 325,
                            AlcoholByVolume = 10.0,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(7182),
                            IsDeleted = false,
                            Name = "White Stork Intergalactic DIPA DDH",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 326,
                            AlcoholByVolume = 5.5,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(7251),
                            IsDeleted = false,
                            Name = "White Stork Summer",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 327,
                            AlcoholByVolume = 5.0,
                            BreweryId = 39,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(7318),
                            IsDeleted = false,
                            Name = "Zlatna Varna Amber",
                            TypeId = 6
                        },
                        new
                        {
                            Id = 328,
                            AlcoholByVolume = 4.9000000000000004,
                            BreweryId = 38,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(7385),
                            IsDeleted = false,
                            Name = "Zlatna Varna Pilsner",
                            TypeId = 11
                        },
                        new
                        {
                            Id = 329,
                            AlcoholByVolume = 6.5,
                            BreweryId = 40,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(7455),
                            IsDeleted = false,
                            Name = "G-n Xops Coconut Milk Porter",
                            TypeId = 9
                        },
                        new
                        {
                            Id = 330,
                            AlcoholByVolume = 6.0,
                            BreweryId = 40,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(7523),
                            IsDeleted = false,
                            Name = "G-n Xops NEIPA V2.0",
                            TypeId = 5
                        },
                        new
                        {
                            Id = 331,
                            AlcoholByVolume = 4.9000000000000004,
                            BreweryId = 40,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(7597),
                            IsDeleted = false,
                            Name = "G-n Xops Pale Ale V2.0",
                            TypeId = 4
                        },
                        new
                        {
                            Id = 332,
                            AlcoholByVolume = 4.5,
                            BreweryId = 40,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 920, DateTimeKind.Local).AddTicks(7664),
                            IsDeleted = false,
                            Name = "G-n Xops",
                            TypeId = 4
                        });
                });

            modelBuilder.Entity("BeerOverflow.Models.BeerDrank", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "BeerId");

                    b.HasIndex("BeerId");

                    b.ToTable("BeersDrank");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BeerId = 1
                        },
                        new
                        {
                            UserId = 1,
                            BeerId = 2
                        },
                        new
                        {
                            UserId = 1,
                            BeerId = 3
                        },
                        new
                        {
                            UserId = 1,
                            BeerId = 4
                        },
                        new
                        {
                            UserId = 2,
                            BeerId = 1
                        },
                        new
                        {
                            UserId = 2,
                            BeerId = 3
                        },
                        new
                        {
                            UserId = 2,
                            BeerId = 4
                        },
                        new
                        {
                            UserId = 3,
                            BeerId = 1
                        },
                        new
                        {
                            UserId = 3,
                            BeerId = 2
                        },
                        new
                        {
                            UserId = 3,
                            BeerId = 4
                        });
                });

            modelBuilder.Entity("BeerOverflow.Models.BeerType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("BeerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(5298),
                            IsDeleted = false,
                            Name = "Pale Lager"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(7862),
                            IsDeleted = false,
                            Name = "Blonde Ale"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(7956),
                            IsDeleted = false,
                            Name = "Hefewizen"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(7991),
                            IsDeleted = false,
                            Name = "Pale Ale"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(8025),
                            IsDeleted = false,
                            Name = "IPA"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(8061),
                            IsDeleted = false,
                            Name = "Amber Ale"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(8093),
                            IsDeleted = false,
                            Name = "Irish Red Ale"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(8125),
                            IsDeleted = false,
                            Name = "Brown Ale"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(8157),
                            IsDeleted = false,
                            Name = "Porter"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(8192),
                            IsDeleted = false,
                            Name = "Stout"
                        },
                        new
                        {
                            Id = 11,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(8224),
                            IsDeleted = false,
                            Name = "Pilsner"
                        },
                        new
                        {
                            Id = 12,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(8260),
                            IsDeleted = false,
                            Name = "Mead"
                        },
                        new
                        {
                            Id = 13,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 917, DateTimeKind.Local).AddTicks(4167),
                            IsDeleted = false,
                            Name = "Bock"
                        },
                        new
                        {
                            Id = 14,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 917, DateTimeKind.Local).AddTicks(4323),
                            IsDeleted = false,
                            Name = "Cider"
                        });
                });

            modelBuilder.Entity("BeerOverflow.Models.Brewery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Breweries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 87,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 909, DateTimeKind.Local).AddTicks(8892),
                            IsDeleted = false,
                            Name = "Mythos Breweries"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(2692),
                            IsDeleted = false,
                            Name = "Ah! Brew Works Sofia"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(2823),
                            IsDeleted = false,
                            Name = "Ailyak Sofia"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(2862),
                            IsDeleted = false,
                            Name = "Astika Brewery Haskovo"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(2895),
                            IsDeleted = false,
                            Name = "Beer Bastards Burgas"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(2932),
                            IsDeleted = false,
                            Name = "Beerbox Sofia"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(2965),
                            IsDeleted = false,
                            Name = "Beershop-BG Sofia"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(2996),
                            IsDeleted = false,
                            Name = "Birariya River Side Sofia"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3027),
                            IsDeleted = false,
                            Name = "Blek Pine Sofia"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3062),
                            IsDeleted = false,
                            Name = "Boliarka Brewery Veliko Tarnovo"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3093),
                            IsDeleted = false,
                            Name = "Bro Beer Sofia"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3126),
                            IsDeleted = false,
                            Name = "Brothers Brew Varna"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3157),
                            IsDeleted = false,
                            Name = "Pivovarnata Burgas"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3190),
                            IsDeleted = false,
                            Name = "Can Supply Blagoevgrad"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3222),
                            IsDeleted = false,
                            Name = "Cohones Brewery Sofia"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3254),
                            IsDeleted = false,
                            Name = "Dorst Sofia"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3285),
                            IsDeleted = false,
                            Name = "Dunav Craft Brewery Ruse"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3320),
                            IsDeleted = false,
                            Name = "Glarus Craft Brewing Company Varna"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3413),
                            IsDeleted = false,
                            Name = "Halbite Sofia"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3453),
                            IsDeleted = false,
                            Name = "Hills Brewery Perushtitsa"
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3484),
                            IsDeleted = false,
                            Name = "Jägerhof Plovdiv"
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3516),
                            IsDeleted = false,
                            Name = "Kazan Artizan Sofia"
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3548),
                            IsDeleted = false,
                            Name = "Lomsko Pivo AD Lom"
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3580),
                            IsDeleted = false,
                            Name = "Birariya Tryavna"
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3612),
                            IsDeleted = false,
                            Name = "Mad Panda Brewery Sofia"
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3643),
                            IsDeleted = false,
                            Name = "Meadly Sofia"
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3675),
                            IsDeleted = false,
                            Name = "Metalhead Brewery Burgas"
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3706),
                            IsDeleted = false,
                            Name = "Pirinsko Pivo Blagoevgrad"
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3738),
                            IsDeleted = false,
                            Name = "Pivoteka Sofia"
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3769),
                            IsDeleted = false,
                            Name = "Pivovaren Zavod Kamenitsa Plovdiv"
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3801),
                            IsDeleted = false,
                            Name = "Pivovarna 359 Mramor"
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3833),
                            IsDeleted = false,
                            Name = "Pivovarna Britos Veliko Tarnovo"
                        },
                        new
                        {
                            Id = 33,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3865),
                            IsDeleted = false,
                            Name = "Pivovarna Zagorka Stara Zagora"
                        },
                        new
                        {
                            Id = 34,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3901),
                            IsDeleted = false,
                            Name = "Rhombus Craft Brewery Pazardzhik"
                        },
                        new
                        {
                            Id = 35,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3933),
                            IsDeleted = false,
                            Name = "Royal Cat Varna"
                        },
                        new
                        {
                            Id = 36,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3965),
                            IsDeleted = false,
                            Name = "Shumensko Pivo Shumen"
                        },
                        new
                        {
                            Id = 37,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(3997),
                            IsDeleted = false,
                            Name = "Trima i Dvama Sliven"
                        },
                        new
                        {
                            Id = 38,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(4028),
                            IsDeleted = false,
                            Name = "White Stork Beer Company Sofia"
                        },
                        new
                        {
                            Id = 39,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(4059),
                            IsDeleted = false,
                            Name = "The Black Sheep Varna"
                        },
                        new
                        {
                            Id = 40,
                            CountryId = 34,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 910, DateTimeKind.Local).AddTicks(4090),
                            IsDeleted = false,
                            Name = "Meltum Brewery Lovech"
                        });
                });

            modelBuilder.Entity("BeerOverflow.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "AF",
                            Name = "Afghanistan"
                        },
                        new
                        {
                            Id = 2,
                            Code = "AX",
                            Name = "Åland Islands"
                        },
                        new
                        {
                            Id = 3,
                            Code = "AL",
                            Name = "Albania"
                        },
                        new
                        {
                            Id = 4,
                            Code = "DZ",
                            Name = "Algeria"
                        },
                        new
                        {
                            Id = 5,
                            Code = "AS",
                            Name = "American Samoa"
                        },
                        new
                        {
                            Id = 6,
                            Code = "AD",
                            Name = "Andorra"
                        },
                        new
                        {
                            Id = 7,
                            Code = "AO",
                            Name = "Angola"
                        },
                        new
                        {
                            Id = 8,
                            Code = "AI",
                            Name = "Anguilla"
                        },
                        new
                        {
                            Id = 9,
                            Code = "AG",
                            Name = "Antigua and Barbuda"
                        },
                        new
                        {
                            Id = 10,
                            Code = "AR",
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = 11,
                            Code = "AM",
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = 12,
                            Code = "AW",
                            Name = "Aruba"
                        },
                        new
                        {
                            Id = 13,
                            Code = "AU",
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 14,
                            Code = "AT",
                            Name = "Austria"
                        },
                        new
                        {
                            Id = 15,
                            Code = "AZ",
                            Name = "Azerbaijan"
                        },
                        new
                        {
                            Id = 16,
                            Code = "BS",
                            Name = "Bahamas"
                        },
                        new
                        {
                            Id = 17,
                            Code = "BH",
                            Name = "Bahrain"
                        },
                        new
                        {
                            Id = 18,
                            Code = "BD",
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = 19,
                            Code = "BB",
                            Name = "Barbados"
                        },
                        new
                        {
                            Id = 20,
                            Code = "BY",
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = 21,
                            Code = "BE",
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = 22,
                            Code = "BZ",
                            Name = "Belize"
                        },
                        new
                        {
                            Id = 23,
                            Code = "BJ",
                            Name = "Benin"
                        },
                        new
                        {
                            Id = 24,
                            Code = "BM",
                            Name = "Bermuda"
                        },
                        new
                        {
                            Id = 25,
                            Code = "BT",
                            Name = "Bhutan"
                        },
                        new
                        {
                            Id = 26,
                            Code = "BO",
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = 27,
                            Code = "BQ",
                            Name = "Bonaire, Sint Eustatius and Saba"
                        },
                        new
                        {
                            Id = 28,
                            Code = "BA",
                            Name = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = 29,
                            Code = "BW",
                            Name = "Botswana"
                        },
                        new
                        {
                            Id = 30,
                            Code = "BR",
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 31,
                            Code = "IO",
                            Name = "British Indian Ocean Territory"
                        },
                        new
                        {
                            Id = 32,
                            Code = "VG",
                            Name = "British Virgin Islands"
                        },
                        new
                        {
                            Id = 33,
                            Code = "BN",
                            Name = "Brunei"
                        },
                        new
                        {
                            Id = 34,
                            Code = "BG",
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Id = 35,
                            Code = "BF",
                            Name = "Burkina Faso"
                        },
                        new
                        {
                            Id = 36,
                            Code = "BI",
                            Name = "Burundi"
                        },
                        new
                        {
                            Id = 37,
                            Code = "CV",
                            Name = "Cabo Verde"
                        },
                        new
                        {
                            Id = 38,
                            Code = "KH",
                            Name = "Cambodia"
                        },
                        new
                        {
                            Id = 39,
                            Code = "CM",
                            Name = "Cameroon"
                        },
                        new
                        {
                            Id = 40,
                            Code = "CA",
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 41,
                            Code = "029",
                            Name = "Caribbean"
                        },
                        new
                        {
                            Id = 42,
                            Code = "KY",
                            Name = "Cayman Islands"
                        },
                        new
                        {
                            Id = 43,
                            Code = "CF",
                            Name = "Central African Republic"
                        },
                        new
                        {
                            Id = 44,
                            Code = "TD",
                            Name = "Chad"
                        },
                        new
                        {
                            Id = 45,
                            Code = "CL",
                            Name = "Chile"
                        },
                        new
                        {
                            Id = 46,
                            Code = "CN",
                            Name = "China"
                        },
                        new
                        {
                            Id = 47,
                            Code = "CX",
                            Name = "Christmas Island"
                        },
                        new
                        {
                            Id = 48,
                            Code = "CC",
                            Name = "Cocos (Keeling) Islands"
                        },
                        new
                        {
                            Id = 49,
                            Code = "CO",
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = 50,
                            Code = "KM",
                            Name = "Comoros"
                        },
                        new
                        {
                            Id = 51,
                            Code = "CG",
                            Name = "Congo"
                        },
                        new
                        {
                            Id = 52,
                            Code = "CD",
                            Name = "Congo (DRC)"
                        },
                        new
                        {
                            Id = 53,
                            Code = "CK",
                            Name = "Cook Islands"
                        },
                        new
                        {
                            Id = 54,
                            Code = "CR",
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Id = 55,
                            Code = "CI",
                            Name = "Côte d’Ivoire"
                        },
                        new
                        {
                            Id = 56,
                            Code = "HR",
                            Name = "Croatia"
                        },
                        new
                        {
                            Id = 57,
                            Code = "CU",
                            Name = "Cuba"
                        },
                        new
                        {
                            Id = 58,
                            Code = "CW",
                            Name = "Curaçao"
                        },
                        new
                        {
                            Id = 59,
                            Code = "CY",
                            Name = "Cyprus"
                        },
                        new
                        {
                            Id = 60,
                            Code = "CZ",
                            Name = "Czechia"
                        },
                        new
                        {
                            Id = 61,
                            Code = "DK",
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = 62,
                            Code = "DJ",
                            Name = "Djibouti"
                        },
                        new
                        {
                            Id = 63,
                            Code = "DM",
                            Name = "Dominica"
                        },
                        new
                        {
                            Id = 64,
                            Code = "DO",
                            Name = "Dominican Republic"
                        },
                        new
                        {
                            Id = 65,
                            Code = "EC",
                            Name = "Ecuador"
                        },
                        new
                        {
                            Id = 66,
                            Code = "EG",
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = 67,
                            Code = "SV",
                            Name = "El Salvador"
                        },
                        new
                        {
                            Id = 68,
                            Code = "GQ",
                            Name = "Equatorial Guinea"
                        },
                        new
                        {
                            Id = 69,
                            Code = "ER",
                            Name = "Eritrea"
                        },
                        new
                        {
                            Id = 70,
                            Code = "EE",
                            Name = "Estonia"
                        },
                        new
                        {
                            Id = 71,
                            Code = "SZ",
                            Name = "Eswatini"
                        },
                        new
                        {
                            Id = 72,
                            Code = "ET",
                            Name = "Ethiopia"
                        },
                        new
                        {
                            Id = 73,
                            Code = "150",
                            Name = "Europe"
                        },
                        new
                        {
                            Id = 74,
                            Code = "FK",
                            Name = "Falkland Islands"
                        },
                        new
                        {
                            Id = 75,
                            Code = "FO",
                            Name = "Faroe Islands"
                        },
                        new
                        {
                            Id = 76,
                            Code = "FJ",
                            Name = "Fiji"
                        },
                        new
                        {
                            Id = 77,
                            Code = "FI",
                            Name = "Finland"
                        },
                        new
                        {
                            Id = 78,
                            Code = "FR",
                            Name = "France"
                        },
                        new
                        {
                            Id = 79,
                            Code = "GF",
                            Name = "French Guiana"
                        },
                        new
                        {
                            Id = 80,
                            Code = "PF",
                            Name = "French Polynesia"
                        },
                        new
                        {
                            Id = 81,
                            Code = "GA",
                            Name = "Gabon"
                        },
                        new
                        {
                            Id = 82,
                            Code = "GM",
                            Name = "Gambia"
                        },
                        new
                        {
                            Id = 83,
                            Code = "GE",
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 84,
                            Code = "DE",
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 85,
                            Code = "GH",
                            Name = "Ghana"
                        },
                        new
                        {
                            Id = 86,
                            Code = "GI",
                            Name = "Gibraltar"
                        },
                        new
                        {
                            Id = 87,
                            Code = "GR",
                            Name = "Greece"
                        },
                        new
                        {
                            Id = 88,
                            Code = "GL",
                            Name = "Greenland"
                        },
                        new
                        {
                            Id = 89,
                            Code = "GD",
                            Name = "Grenada"
                        },
                        new
                        {
                            Id = 90,
                            Code = "GP",
                            Name = "Guadeloupe"
                        },
                        new
                        {
                            Id = 91,
                            Code = "GU",
                            Name = "Guam"
                        },
                        new
                        {
                            Id = 92,
                            Code = "GT",
                            Name = "Guatemala"
                        },
                        new
                        {
                            Id = 93,
                            Code = "GG",
                            Name = "Guernsey"
                        },
                        new
                        {
                            Id = 94,
                            Code = "GN",
                            Name = "Guinea"
                        },
                        new
                        {
                            Id = 95,
                            Code = "GW",
                            Name = "Guinea-Bissau"
                        },
                        new
                        {
                            Id = 96,
                            Code = "GY",
                            Name = "Guyana"
                        },
                        new
                        {
                            Id = 97,
                            Code = "HT",
                            Name = "Haiti"
                        },
                        new
                        {
                            Id = 98,
                            Code = "HN",
                            Name = "Honduras"
                        },
                        new
                        {
                            Id = 99,
                            Code = "HK",
                            Name = "Hong Kong SAR"
                        },
                        new
                        {
                            Id = 100,
                            Code = "HU",
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = 101,
                            Code = "IS",
                            Name = "Iceland"
                        },
                        new
                        {
                            Id = 102,
                            Code = "IN",
                            Name = "India"
                        },
                        new
                        {
                            Id = 103,
                            Code = "ID",
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = 104,
                            Code = "IR",
                            Name = "Iran"
                        },
                        new
                        {
                            Id = 105,
                            Code = "IQ",
                            Name = "Iraq"
                        },
                        new
                        {
                            Id = 106,
                            Code = "IE",
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = 107,
                            Code = "IM",
                            Name = "Isle of Man"
                        },
                        new
                        {
                            Id = 108,
                            Code = "IL",
                            Name = "Israel"
                        },
                        new
                        {
                            Id = 109,
                            Code = "IT",
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 110,
                            Code = "JM",
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = 111,
                            Code = "JP",
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 112,
                            Code = "JE",
                            Name = "Jersey"
                        },
                        new
                        {
                            Id = 113,
                            Code = "JO",
                            Name = "Jordan"
                        },
                        new
                        {
                            Id = 114,
                            Code = "KZ",
                            Name = "Kazakhstan"
                        },
                        new
                        {
                            Id = 115,
                            Code = "KE",
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = 116,
                            Code = "KI",
                            Name = "Kiribati"
                        },
                        new
                        {
                            Id = 117,
                            Code = "KR",
                            Name = "Korea"
                        },
                        new
                        {
                            Id = 118,
                            Code = "XK",
                            Name = "Kosovo"
                        },
                        new
                        {
                            Id = 119,
                            Code = "KW",
                            Name = "Kuwait"
                        },
                        new
                        {
                            Id = 120,
                            Code = "KG",
                            Name = "Kyrgyzstan"
                        },
                        new
                        {
                            Id = 121,
                            Code = "LA",
                            Name = "Laos"
                        },
                        new
                        {
                            Id = 122,
                            Code = "419",
                            Name = "Latin America"
                        },
                        new
                        {
                            Id = 123,
                            Code = "LV",
                            Name = "Latvia"
                        },
                        new
                        {
                            Id = 124,
                            Code = "LB",
                            Name = "Lebanon"
                        },
                        new
                        {
                            Id = 125,
                            Code = "LS",
                            Name = "Lesotho"
                        },
                        new
                        {
                            Id = 126,
                            Code = "LR",
                            Name = "Liberia"
                        },
                        new
                        {
                            Id = 127,
                            Code = "LY",
                            Name = "Libya"
                        },
                        new
                        {
                            Id = 128,
                            Code = "LI",
                            Name = "Liechtenstein"
                        },
                        new
                        {
                            Id = 129,
                            Code = "LT",
                            Name = "Lithuania"
                        },
                        new
                        {
                            Id = 130,
                            Code = "LU",
                            Name = "Luxembourg"
                        },
                        new
                        {
                            Id = 131,
                            Code = "MO",
                            Name = "Macao SAR"
                        },
                        new
                        {
                            Id = 132,
                            Code = "MG",
                            Name = "Madagascar"
                        },
                        new
                        {
                            Id = 133,
                            Code = "MW",
                            Name = "Malawi"
                        },
                        new
                        {
                            Id = 134,
                            Code = "MY",
                            Name = "Malaysia"
                        },
                        new
                        {
                            Id = 135,
                            Code = "MV",
                            Name = "Maldives"
                        },
                        new
                        {
                            Id = 136,
                            Code = "ML",
                            Name = "Mali"
                        },
                        new
                        {
                            Id = 137,
                            Code = "MT",
                            Name = "Malta"
                        },
                        new
                        {
                            Id = 138,
                            Code = "MH",
                            Name = "Marshall Islands"
                        },
                        new
                        {
                            Id = 139,
                            Code = "MQ",
                            Name = "Martinique"
                        },
                        new
                        {
                            Id = 140,
                            Code = "MR",
                            Name = "Mauritania"
                        },
                        new
                        {
                            Id = 141,
                            Code = "MU",
                            Name = "Mauritius"
                        },
                        new
                        {
                            Id = 142,
                            Code = "YT",
                            Name = "Mayotte"
                        },
                        new
                        {
                            Id = 143,
                            Code = "MX",
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = 144,
                            Code = "FM",
                            Name = "Micronesia"
                        },
                        new
                        {
                            Id = 145,
                            Code = "MD",
                            Name = "Moldova"
                        },
                        new
                        {
                            Id = 146,
                            Code = "MC",
                            Name = "Monaco"
                        },
                        new
                        {
                            Id = 147,
                            Code = "MN",
                            Name = "Mongolia"
                        },
                        new
                        {
                            Id = 148,
                            Code = "ME",
                            Name = "Montenegro"
                        },
                        new
                        {
                            Id = 149,
                            Code = "MS",
                            Name = "Montserrat"
                        },
                        new
                        {
                            Id = 150,
                            Code = "MA",
                            Name = "Morocco"
                        },
                        new
                        {
                            Id = 151,
                            Code = "MZ",
                            Name = "Mozambique"
                        },
                        new
                        {
                            Id = 152,
                            Code = "MM",
                            Name = "Myanmar"
                        },
                        new
                        {
                            Id = 153,
                            Code = "NA",
                            Name = "Namibia"
                        },
                        new
                        {
                            Id = 154,
                            Code = "NR",
                            Name = "Nauru"
                        },
                        new
                        {
                            Id = 155,
                            Code = "NP",
                            Name = "Nepal"
                        },
                        new
                        {
                            Id = 156,
                            Code = "NL",
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = 157,
                            Code = "NC",
                            Name = "New Caledonia"
                        },
                        new
                        {
                            Id = 158,
                            Code = "NZ",
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = 159,
                            Code = "NI",
                            Name = "Nicaragua"
                        },
                        new
                        {
                            Id = 160,
                            Code = "NE",
                            Name = "Niger"
                        },
                        new
                        {
                            Id = 161,
                            Code = "NG",
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = 162,
                            Code = "NU",
                            Name = "Niue"
                        },
                        new
                        {
                            Id = 163,
                            Code = "NF",
                            Name = "Norfolk Island"
                        },
                        new
                        {
                            Id = 164,
                            Code = "KP",
                            Name = "North Korea"
                        },
                        new
                        {
                            Id = 165,
                            Code = "MK",
                            Name = "North Macedonia"
                        },
                        new
                        {
                            Id = 166,
                            Code = "MP",
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Id = 167,
                            Code = "NO",
                            Name = "Norway"
                        },
                        new
                        {
                            Id = 168,
                            Code = "OM",
                            Name = "Oman"
                        },
                        new
                        {
                            Id = 169,
                            Code = "PK",
                            Name = "Pakistan"
                        },
                        new
                        {
                            Id = 170,
                            Code = "PW",
                            Name = "Palau"
                        },
                        new
                        {
                            Id = 171,
                            Code = "PS",
                            Name = "Palestinian Authority"
                        },
                        new
                        {
                            Id = 172,
                            Code = "PA",
                            Name = "Panama"
                        },
                        new
                        {
                            Id = 173,
                            Code = "PG",
                            Name = "Papua New Guinea"
                        },
                        new
                        {
                            Id = 174,
                            Code = "PY",
                            Name = "Paraguay"
                        },
                        new
                        {
                            Id = 175,
                            Code = "PE",
                            Name = "Peru"
                        },
                        new
                        {
                            Id = 176,
                            Code = "PH",
                            Name = "Philippines"
                        },
                        new
                        {
                            Id = 177,
                            Code = "PN",
                            Name = "Pitcairn Islands"
                        },
                        new
                        {
                            Id = 178,
                            Code = "PL",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 179,
                            Code = "PT",
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = 180,
                            Code = "PR",
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = 181,
                            Code = "QA",
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = 182,
                            Code = "RE",
                            Name = "Réunion"
                        },
                        new
                        {
                            Id = 183,
                            Code = "RO",
                            Name = "Romania"
                        },
                        new
                        {
                            Id = 184,
                            Code = "RU",
                            Name = "Russia"
                        },
                        new
                        {
                            Id = 185,
                            Code = "RW",
                            Name = "Rwanda"
                        },
                        new
                        {
                            Id = 186,
                            Code = "BL",
                            Name = "Saint Barthélemy"
                        },
                        new
                        {
                            Id = 187,
                            Code = "KN",
                            Name = "Saint Kitts and Nevis"
                        },
                        new
                        {
                            Id = 188,
                            Code = "LC",
                            Name = "Saint Lucia"
                        },
                        new
                        {
                            Id = 189,
                            Code = "MF",
                            Name = "Saint Martin"
                        },
                        new
                        {
                            Id = 190,
                            Code = "PM",
                            Name = "Saint Pierre and Miquelon"
                        },
                        new
                        {
                            Id = 191,
                            Code = "VC",
                            Name = "Saint Vincent and the Grenadines"
                        },
                        new
                        {
                            Id = 192,
                            Code = "WS",
                            Name = "Samoa"
                        },
                        new
                        {
                            Id = 193,
                            Code = "SM",
                            Name = "San Marino"
                        },
                        new
                        {
                            Id = 194,
                            Code = "ST",
                            Name = "São Tomé and Príncipe"
                        },
                        new
                        {
                            Id = 195,
                            Code = "SA",
                            Name = "Saudi Arabia"
                        },
                        new
                        {
                            Id = 196,
                            Code = "SN",
                            Name = "Senegal"
                        },
                        new
                        {
                            Id = 197,
                            Code = "RS",
                            Name = "Serbia"
                        },
                        new
                        {
                            Id = 198,
                            Code = "SC",
                            Name = "Seychelles"
                        },
                        new
                        {
                            Id = 199,
                            Code = "SL",
                            Name = "Sierra Leone"
                        },
                        new
                        {
                            Id = 200,
                            Code = "SG",
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = 201,
                            Code = "SX",
                            Name = "Sint Maarten"
                        },
                        new
                        {
                            Id = 202,
                            Code = "SK",
                            Name = "Slovakia"
                        },
                        new
                        {
                            Id = 203,
                            Code = "SI",
                            Name = "Slovenia"
                        },
                        new
                        {
                            Id = 204,
                            Code = "SB",
                            Name = "Solomon Islands"
                        },
                        new
                        {
                            Id = 205,
                            Code = "SO",
                            Name = "Somalia"
                        },
                        new
                        {
                            Id = 206,
                            Code = "ZA",
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = 207,
                            Code = "SS",
                            Name = "South Sudan"
                        },
                        new
                        {
                            Id = 208,
                            Code = "ES",
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 209,
                            Code = "LK",
                            Name = "Sri Lanka"
                        },
                        new
                        {
                            Id = 210,
                            Code = "SH",
                            Name = "St Helena, Ascension, Tristan da Cunha"
                        },
                        new
                        {
                            Id = 211,
                            Code = "SD",
                            Name = "Sudan"
                        },
                        new
                        {
                            Id = 212,
                            Code = "SR",
                            Name = "Suriname"
                        },
                        new
                        {
                            Id = 213,
                            Code = "SJ",
                            Name = "Svalbard and Jan Mayen"
                        },
                        new
                        {
                            Id = 214,
                            Code = "SE",
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = 215,
                            Code = "CH",
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = 216,
                            Code = "SY",
                            Name = "Syria"
                        },
                        new
                        {
                            Id = 217,
                            Code = "TW",
                            Name = "Taiwan"
                        },
                        new
                        {
                            Id = 218,
                            Code = "TJ",
                            Name = "Tajikistan"
                        },
                        new
                        {
                            Id = 219,
                            Code = "TZ",
                            Name = "Tanzania"
                        },
                        new
                        {
                            Id = 220,
                            Code = "TH",
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = 221,
                            Code = "TL",
                            Name = "Timor-Leste"
                        },
                        new
                        {
                            Id = 222,
                            Code = "TG",
                            Name = "Togo"
                        },
                        new
                        {
                            Id = 223,
                            Code = "TK",
                            Name = "Tokelau"
                        },
                        new
                        {
                            Id = 224,
                            Code = "TO",
                            Name = "Tonga"
                        },
                        new
                        {
                            Id = 225,
                            Code = "TT",
                            Name = "Trinidad and Tobago"
                        },
                        new
                        {
                            Id = 226,
                            Code = "TN",
                            Name = "Tunisia"
                        },
                        new
                        {
                            Id = 227,
                            Code = "TR",
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = 228,
                            Code = "TM",
                            Name = "Turkmenistan"
                        },
                        new
                        {
                            Id = 229,
                            Code = "TC",
                            Name = "Turks and Caicos Islands"
                        },
                        new
                        {
                            Id = 230,
                            Code = "TV",
                            Name = "Tuvalu"
                        },
                        new
                        {
                            Id = 231,
                            Code = "UM",
                            Name = "U.S. Outlying Islands"
                        },
                        new
                        {
                            Id = 232,
                            Code = "VI",
                            Name = "U.S. Virgin Islands"
                        },
                        new
                        {
                            Id = 233,
                            Code = "UG",
                            Name = "Uganda"
                        },
                        new
                        {
                            Id = 234,
                            Code = "UA",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 235,
                            Code = "AE",
                            Name = "United Arab Emirates"
                        },
                        new
                        {
                            Id = 236,
                            Code = "GB",
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 237,
                            Code = "US",
                            Name = "United States"
                        },
                        new
                        {
                            Id = 238,
                            Code = "UY",
                            Name = "Uruguay"
                        },
                        new
                        {
                            Id = 239,
                            Code = "UZ",
                            Name = "Uzbekistan"
                        },
                        new
                        {
                            Id = 240,
                            Code = "VU",
                            Name = "Vanuatu"
                        },
                        new
                        {
                            Id = 241,
                            Code = "VA",
                            Name = "Vatican City"
                        },
                        new
                        {
                            Id = 242,
                            Code = "VE",
                            Name = "Venezuela"
                        },
                        new
                        {
                            Id = 243,
                            Code = "VN",
                            Name = "Vietnam"
                        },
                        new
                        {
                            Id = 244,
                            Code = "WF",
                            Name = "Wallis and Futuna"
                        },
                        new
                        {
                            Id = 245,
                            Code = "001",
                            Name = "World"
                        },
                        new
                        {
                            Id = 246,
                            Code = "YE",
                            Name = "Yemen"
                        },
                        new
                        {
                            Id = 247,
                            Code = "ZM",
                            Name = "Zambia"
                        },
                        new
                        {
                            Id = 248,
                            Code = "ZW",
                            Name = "Zimbabwe"
                        });
                });

            modelBuilder.Entity("BeerOverflow.Models.Like", b =>
                {
                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BeerId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("BeerOverflow.Models.Review", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("TargetBeerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId", "TargetBeerId");

                    b.HasIndex("TargetBeerId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            TargetBeerId = 1,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 922, DateTimeKind.Local).AddTicks(4516),
                            Id = 1,
                            IsDeleted = false,
                            Name = "Na Pesho Review-to",
                            Rating = 10,
                            Text = "Respect!"
                        },
                        new
                        {
                            AuthorId = 2,
                            TargetBeerId = 3,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 922, DateTimeKind.Local).AddTicks(5034),
                            Id = 2,
                            IsDeleted = false,
                            Name = "Na Gosho Review-to",
                            Rating = 7,
                            Text = "Evalata Pesho mnogo dobra bira"
                        },
                        new
                        {
                            AuthorId = 3,
                            TargetBeerId = 2,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 922, DateTimeKind.Local).AddTicks(5096),
                            Id = 3,
                            IsDeleted = false,
                            Name = "Na Tosho Review-to",
                            Rating = 8,
                            Text = "Tozi Pesho mnogo hubavi gi pravi."
                        },
                        new
                        {
                            AuthorId = 4,
                            TargetBeerId = 1,
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 922, DateTimeKind.Local).AddTicks(5141),
                            Id = 4,
                            IsDeleted = false,
                            Name = "Kaiser nomer edno",
                            Rating = 10,
                            Text = "Bira ot butilka ne bqh pil do sq"
                        });
                });

            modelBuilder.Entity("BeerOverflow.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "96951fe0-bab9-4b1a-a7ce-9dd2e458ea7c",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = 2,
                            ConcurrencyStamp = "bbbf1282-4ebe-47d6-b3ab-d3c1d7200b74",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = 3,
                            ConcurrencyStamp = "d4be4c87-5ff5-41de-aa28-8f1176dcb208",
                            Name = "Guest",
                            NormalizedName = "GUEST"
                        });
                });

            modelBuilder.Entity("BeerOverflow.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("BanReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBanned")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "45fd99a6-f408-47ed-bb4d-718c99e3b8c5",
                            CreatedOn = new DateTime(2020, 4, 29, 17, 1, 31, 854, DateTimeKind.Utc).AddTicks(1213),
                            Email = "grand_master@biri.com",
                            EmailConfirmed = false,
                            IsBanned = false,
                            IsDeleted = false,
                            LockoutEnabled = true,
                            NormalizedEmail = "GRAND_MASTER@BIRI.COM",
                            NormalizedUserName = "GRAND_MASTER@BIRI.COM",
                            PasswordHash = "AQAAAAEAACcQAAAAEKXL+B4ida6r9G2RNkCP/15J65ujzpdMsTf7fvjZQGmZyJsWnkYKnIZbzE20g56F3w==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7I5VNHIJTSZNOT3KDWKNFUV5PVYBHGXN",
                            TwoFactorEnabled = false,
                            UserName = "grand_master@biri.com"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "776f72c7-e59f-4fc2-980b-cccb063b2036",
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 921, DateTimeKind.Local).AddTicks(5662),
                            Email = "Pesho@biri.com",
                            EmailConfirmed = false,
                            IsBanned = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "PESHO@BIRI.COM",
                            NormalizedUserName = "PESHO",
                            PhoneNumber = "0888696969",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Pesho"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6d108ccc-06af-4b7b-bcf7-0da1bcbbea68",
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 921, DateTimeKind.Local).AddTicks(7213),
                            Email = "Gosho@biri.com",
                            EmailConfirmed = false,
                            IsBanned = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "GOSHO@BIRI.COM",
                            NormalizedUserName = "GOSHO",
                            PhoneNumber = "0895623545",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Gosho"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "01cbe687-af96-499a-bbe9-b569d148eedb",
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 921, DateTimeKind.Local).AddTicks(7320),
                            Email = "Tosho@biri.com",
                            EmailConfirmed = false,
                            IsBanned = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "TOSHO@BIRI.COM",
                            NormalizedUserName = "TOSHO",
                            PhoneNumber = "08884201333",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Tosho"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "09d9b579-1104-4724-8eb1-a60377080e9b",
                            CreatedOn = new DateTime(2020, 4, 29, 20, 1, 31, 921, DateTimeKind.Local).AddTicks(7400),
                            Email = "Slavcho@biri.com",
                            EmailConfirmed = false,
                            IsBanned = false,
                            IsDeleted = false,
                            LockoutEnabled = false,
                            NormalizedEmail = "SLAVCHO@BIRI.COM",
                            NormalizedUserName = "SLAVCHO",
                            PhoneNumber = "08884204200",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Slavcho"
                        });
                });

            modelBuilder.Entity("BeerOverflow.Models.WishlistBeer", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("BeerId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "BeerId");

                    b.HasIndex("BeerId");

                    b.ToTable("WishlistBeers");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BeerId = 1
                        },
                        new
                        {
                            UserId = 1,
                            BeerId = 2
                        },
                        new
                        {
                            UserId = 1,
                            BeerId = 3
                        },
                        new
                        {
                            UserId = 2,
                            BeerId = 1
                        },
                        new
                        {
                            UserId = 2,
                            BeerId = 2
                        },
                        new
                        {
                            UserId = 2,
                            BeerId = 4
                        },
                        new
                        {
                            UserId = 3,
                            BeerId = 4
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BeerOverflow.Models.Beer", b =>
                {
                    b.HasOne("BeerOverflow.Models.Brewery", "Brewery")
                        .WithMany()
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerOverflow.Models.BeerType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeerOverflow.Models.BeerDrank", b =>
                {
                    b.HasOne("BeerOverflow.Models.Beer", "Beer")
                        .WithMany()
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerOverflow.Models.User", "User")
                        .WithMany("BeersDrank")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeerOverflow.Models.Brewery", b =>
                {
                    b.HasOne("BeerOverflow.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeerOverflow.Models.Like", b =>
                {
                    b.HasOne("BeerOverflow.Models.Beer", "Beer")
                        .WithMany("Likes")
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerOverflow.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeerOverflow.Models.Review", b =>
                {
                    b.HasOne("BeerOverflow.Models.User", "Author")
                        .WithMany("Reviews")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerOverflow.Models.Beer", "TargetBeer")
                        .WithMany("Reviews")
                        .HasForeignKey("TargetBeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeerOverflow.Models.WishlistBeer", b =>
                {
                    b.HasOne("BeerOverflow.Models.Beer", "Beer")
                        .WithMany()
                        .HasForeignKey("BeerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerOverflow.Models.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("BeerOverflow.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("BeerOverflow.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("BeerOverflow.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("BeerOverflow.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BeerOverflow.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("BeerOverflow.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
