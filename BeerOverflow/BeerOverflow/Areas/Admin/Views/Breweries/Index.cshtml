@model PaginatedList<BeerOverflow.Models.Brewery>
@using BeerOverflow.Web
@{
    ViewData["Title"] = "Breweries";
}

<h1>Breweries</h1>

<p>
    <a class="btn btn-warning" asp-action="Create">Create Brewery</a>
</p>
<form asp-controller="Breweries" asp-action="Index">
    <p>
        Find Brewery: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" class="btn btn-warning" /> 
        <a class="btn btn-danger" asp-action="Index">Back to Full List</a>
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Country
            </th>
            <th>
                CreatedOn
            </th>
            <th>
                ModifiedOn
            </th>
            <th>
                IsDeleted
            </th>
            <th>
                DeletedOn
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Country.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedOn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsDeleted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeletedOn)
            </td>

            <td>
            <td>
                <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a> 
                <a class="btn btn-warning" asp-action="Details" asp-route-id="@item.Id">Details</a> 
                <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-warning @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-warning @nextDisabled">
    Next
</a>