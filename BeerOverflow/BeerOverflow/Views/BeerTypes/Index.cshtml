@model PaginatedList<BeerOverflow.Models.BeerType>
@using BeerOverflow.Web

@{
    ViewData["Title"] = "Beer Types";
}

<h1>BeerTypes</h1>

<p>
    <a asp-action="Create">Create Beer Type</a>
</p>
<form asp-controller="BeerTypes" asp-action="Index">
    <p>
        Find BeerType: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" class="btn-primary" /> |
        <a asp-action="Index">Back to Full List</a>
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
            </tr>
        }
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-primary @nextDisabled">
    Next
</a>